# Full Output
Windows PowerShell
Copyright (C) Microsoft Corporation. All rights reserved.

Try the new cross-platform PowerShell https://aka.ms/pscore6

PS C:\Users\ofarr> docker run hello-world
Unable to find image 'hello-world:latest' locally
latest: Pulling from library/hello-world
2db29710123e: Pull complete
Digest: sha256:37a0b92b08d4919615c3ee023f7ddb068d12b8387475d64c622ac30f45c29c51
Status: Downloaded newer image for hello-world:latest

Hello from Docker!
This message shows that your installation appears to be working correctly.

To generate this message, Docker took the following steps:
 1. The Docker client contacted the Docker daemon.
 2. The Docker daemon pulled the "hello-world" image from the Docker Hub.
    (amd64)
 3. The Docker daemon created a new container from that image which runs the
    executable that produces the output you are currently reading.
 4. The Docker daemon streamed that output to the Docker client, which sent it
    to your terminal.

To try something more ambitious, you can run an Ubuntu container with:
 $ docker run -it ubuntu bash

Share images, automate workflows, and more with a free Docker ID:
 https://hub.docker.com/

For more examples and ideas, visit:
 https://docs.docker.com/get-started/

PS C:\Users\ofarr> docker

Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "C:\\Users\\ofarr\\.docker")
  -c, --context string     Name of the context to use to connect to the
                           daemon (overrides DOCKER_HOST env var and
                           default context set with "docker context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "C:\\Users\\ofarr\\.docker\\ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "C:\\Users\\ofarr\\.docker\\cert.pem")
      --tlskey string      Path to TLS key file (default
                           "C:\\Users\\ofarr\\.docker\\key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  builder     Manage builds
  buildx*     Build with BuildKit (Docker Inc., v0.6.3)
  compose*    Docker Compose (Docker Inc., v2.0.0)
  config      Manage Docker configs
  container   Manage containers
  context     Manage contexts
  image       Manage images
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  scan*       Docker Scan (Docker Inc., v0.8.0)
  secret      Manage Docker secrets
  service     Manage services
  stack       Manage Docker stacks
  swarm       Manage Swarm
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

To get more help with docker, check out our guides at https://docs.docker.com/go/guides/
PS C:\Users\ofarr> docker exec --help

Usage:  docker exec [OPTIONS] CONTAINER COMMAND [ARG...]

Run a command in a running container

Options:
  -d, --detach               Detached mode: run command in the background
      --detach-keys string   Override the key sequence for detaching a
                             container
  -e, --env list             Set environment variables
      --env-file list        Read in a file of environment variables
  -i, --interactive          Keep STDIN open even if not attached
      --privileged           Give extended privileges to the command
  -t, --tty                  Allocate a pseudo-TTY
  -u, --user string          Username or UID (format:
                             <name|uid>[:<group|gid>])
  -w, --workdir string       Working directory inside the container
PS C:\Users\ofarr> docker run --help

Usage:  docker run [OPTIONS] IMAGE [COMMAND] [ARG...]

Run a command in a new container

Options:
      --add-host list                  Add a custom host-to-IP mapping
                                       (host:ip)
  -a, --attach list                    Attach to STDIN, STDOUT or STDERR
      --blkio-weight uint16            Block IO (relative weight),
                                       between 10 and 1000, or 0 to
                                       disable (default 0)
      --blkio-weight-device list       Block IO weight (relative device
                                       weight) (default [])
      --cap-add list                   Add Linux capabilities
      --cap-drop list                  Drop Linux capabilities
      --cgroup-parent string           Optional parent cgroup for the
                                       container
      --cgroupns string                Cgroup namespace to use
                                       (host|private)
                                       'host':    Run the container in
                                       the Docker host's cgroup namespace
                                       'private': Run the container in
                                       its own private cgroup namespace
                                       '':        Use the cgroup
                                       namespace as configured by the
                                                  default-cgroupns-mode
                                       option on the daemon (default)
      --cidfile string                 Write the container ID to the file
      --cpu-period int                 Limit CPU CFS (Completely Fair
                                       Scheduler) period
      --cpu-quota int                  Limit CPU CFS (Completely Fair
                                       Scheduler) quota
      --cpu-rt-period int              Limit CPU real-time period in
                                       microseconds
      --cpu-rt-runtime int             Limit CPU real-time runtime in
                                       microseconds
  -c, --cpu-shares int                 CPU shares (relative weight)
      --cpus decimal                   Number of CPUs
      --cpuset-cpus string             CPUs in which to allow execution
                                       (0-3, 0,1)
      --cpuset-mems string             MEMs in which to allow execution
                                       (0-3, 0,1)
  -d, --detach                         Run container in background and
                                       print container ID
      --detach-keys string             Override the key sequence for
                                       detaching a container
      --device list                    Add a host device to the container
      --device-cgroup-rule list        Add a rule to the cgroup allowed
                                       devices list
      --device-read-bps list           Limit read rate (bytes per second)
                                       from a device (default [])
      --device-read-iops list          Limit read rate (IO per second)
                                       from a device (default [])
      --device-write-bps list          Limit write rate (bytes per
                                       second) to a device (default [])
      --device-write-iops list         Limit write rate (IO per second)
                                       to a device (default [])
      --disable-content-trust          Skip image verification (default true)
      --dns list                       Set custom DNS servers
      --dns-option list                Set DNS options
      --dns-search list                Set custom DNS search domains
      --domainname string              Container NIS domain name
      --entrypoint string              Overwrite the default ENTRYPOINT
                                       of the image
  -e, --env list                       Set environment variables
      --env-file list                  Read in a file of environment variables
      --expose list                    Expose a port or a range of ports
      --gpus gpu-request               GPU devices to add to the
                                       container ('all' to pass all GPUs)
      --group-add list                 Add additional groups to join
      --health-cmd string              Command to run to check health
      --health-interval duration       Time between running the check
                                       (ms|s|m|h) (default 0s)
      --health-retries int             Consecutive failures needed to
                                       report unhealthy
      --health-start-period duration   Start period for the container to
                                       initialize before starting
                                       health-retries countdown
                                       (ms|s|m|h) (default 0s)
      --health-timeout duration        Maximum time to allow one check to
                                       run (ms|s|m|h) (default 0s)
      --help                           Print usage
  -h, --hostname string                Container host name
      --init                           Run an init inside the container
                                       that forwards signals and reaps
                                       processes
  -i, --interactive                    Keep STDIN open even if not attached
      --ip string                      IPv4 address (e.g., 172.30.100.104)
      --ip6 string                     IPv6 address (e.g., 2001:db8::33)
      --ipc string                     IPC mode to use
      --isolation string               Container isolation technology
      --kernel-memory bytes            Kernel memory limit
  -l, --label list                     Set meta data on a container
      --label-file list                Read in a line delimited file of labels
      --link list                      Add link to another container
      --link-local-ip list             Container IPv4/IPv6 link-local
                                       addresses
      --log-driver string              Logging driver for the container
      --log-opt list                   Log driver options
      --mac-address string             Container MAC address (e.g.,
                                       92:d0:c6:0a:29:33)
  -m, --memory bytes                   Memory limit
      --memory-reservation bytes       Memory soft limit
      --memory-swap bytes              Swap limit equal to memory plus
                                       swap: '-1' to enable unlimited swap
      --memory-swappiness int          Tune container memory swappiness
                                       (0 to 100) (default -1)
      --mount mount                    Attach a filesystem mount to the
                                       container
      --name string                    Assign a name to the container
      --network network                Connect a container to a network
      --network-alias list             Add network-scoped alias for the
                                       container
      --no-healthcheck                 Disable any container-specified
                                       HEALTHCHECK
      --oom-kill-disable               Disable OOM Killer
      --oom-score-adj int              Tune host's OOM preferences (-1000
                                       to 1000)
      --pid string                     PID namespace to use
      --pids-limit int                 Tune container pids limit (set -1
                                       for unlimited)
      --platform string                Set platform if server is
                                       multi-platform capable
      --privileged                     Give extended privileges to this
                                       container
  -p, --publish list                   Publish a container's port(s) to
                                       the host
  -P, --publish-all                    Publish all exposed ports to
                                       random ports
      --pull string                    Pull image before running
                                       ("always"|"missing"|"never")
                                       (default "missing")
      --read-only                      Mount the container's root
                                       filesystem as read only
      --restart string                 Restart policy to apply when a
                                       container exits (default "no")
      --rm                             Automatically remove the container
                                       when it exits
      --runtime string                 Runtime to use for this container
      --security-opt list              Security Options
      --shm-size bytes                 Size of /dev/shm
      --sig-proxy                      Proxy received signals to the
                                       process (default true)
      --stop-signal string             Signal to stop a container
                                       (default "15")
      --stop-timeout int               Timeout (in seconds) to stop a
                                       container
      --storage-opt list               Storage driver options for the
                                       container
      --sysctl map                     Sysctl options (default map[])
      --tmpfs list                     Mount a tmpfs directory
  -t, --tty                            Allocate a pseudo-TTY
      --ulimit ulimit                  Ulimit options (default [])
  -u, --user string                    Username or UID (format:
                                       <name|uid>[:<group|gid>])
      --userns string                  User namespace to use
      --uts string                     UTS namespace to use
  -v, --volume list                    Bind mount a volume
      --volume-driver string           Optional volume driver for the
                                       container
      --volumes-from list              Mount volumes from the specified
                                       container(s)
  -w, --workdir string                 Working directory inside the container
PS C:\Users\ofarr> docker images
REPOSITORY    TAG       IMAGE ID       CREATED       SIZE
hello-world   latest    feb5d9fea6a5   3 weeks ago   13.3kB
PS C:\Users\ofarr> docker ps -a
CONTAINER ID   IMAGE         COMMAND    CREATED              STATUS                          PORTS     NAMES
3f7aa06f299f   hello-world   "/hello"   About a minute ago   Exited (0) About a minute ago             frosty_wescoff
PS C:\Users\ofarr> docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
PS C:\Users\ofarr> docker run -it ubuntu:14.04 /bin/bash
Unable to find image 'ubuntu:14.04' locally
14.04: Pulling from library/ubuntu
2e6e20c8e2e6: Pull complete
0551a797c01d: Pull complete
512123a864da: Pull complete
Digest: sha256:60840958b25b5947b11d7a274274dc48ab32a2f5d18527f5dae2962b64269a3a
Status: Downloaded newer image for ubuntu:14.04
root@f036f1991327:/# apt-get update
Get:1 http://security.ubuntu.com trusty-security InRelease [65.9 kB]
Get:2 http://security.ubuntu.com trusty-security/main amd64 Packages [1032 kB]
Ign http://archive.ubuntu.com trusty InRelease
Get:3 http://archive.ubuntu.com trusty-updates InRelease [65.9 kB]
Get:4 http://archive.ubuntu.com trusty-backports InRelease [65.9 kB]
Get:5 https://esm.ubuntu.com trusty-infra-security InRelease
Get:6 https://esm.ubuntu.com trusty-infra-updates InRelease
Hit http://archive.ubuntu.com trusty Release.gpg
Get:7 https://esm.ubuntu.com trusty-infra-security/main amd64 Packages
Get:8 http://archive.ubuntu.com trusty-updates/main amd64 Packages [1460 kB]
Get:9 http://security.ubuntu.com trusty-security/restricted amd64 Packages [18.1 kB]
Get:10 http://security.ubuntu.com trusty-security/universe amd64 Packages [378 kB]
Get:11 http://security.ubuntu.com trusty-security/multiverse amd64 Packages [4730 B]
Get:12 http://archive.ubuntu.com trusty-updates/restricted amd64 Packages [21.4 kB]
Get:13 https://esm.ubuntu.com trusty-infra-updates/main amd64 Packages
Get:14 http://archive.ubuntu.com trusty-updates/universe amd64 Packages [671 kB]
Get:15 http://archive.ubuntu.com trusty-updates/multiverse amd64 Packages [16.1 kB]
Get:16 http://archive.ubuntu.com trusty-backports/main amd64 Packages [14.7 kB]
Get:17 http://archive.ubuntu.com trusty-backports/restricted amd64 Packages [40 B]
Get:18 http://archive.ubuntu.com trusty-backports/universe amd64 Packages [52.5 kB]
Get:19 http://archive.ubuntu.com trusty-backports/multiverse amd64 Packages [1392 B]
Hit http://archive.ubuntu.com trusty Release
Get:20 http://archive.ubuntu.com trusty/main amd64 Packages [1743 kB]
Get:21 http://archive.ubuntu.com trusty/restricted amd64 Packages [16.0 kB]
Get:22 http://archive.ubuntu.com trusty/universe amd64 Packages [7589 kB]
Get:23 http://archive.ubuntu.com trusty/multiverse amd64 Packages [169 kB]
Fetched 13.9 MB in 6s (2240 kB/s)
Reading package lists... Done
root@f036f1991327:/# exit
exit
PS C:\Users\ofarr> docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
PS C:\Users\ofarr> docker ps -a
CONTAINER ID   IMAGE          COMMAND       CREATED         STATUS                      PORTS     NAMES
f036f1991327   ubuntu:14.04   "/bin/bash"   3 minutes ago   Exited (0) 39 seconds ago             sweet_khayyam
3f7aa06f299f   hello-world    "/hello"      6 minutes ago   Exited (0) 6 minutes ago              frosty_wescoff
PS C:\Users\ofarr> docker run -it ubuntu:14.04 /bin/bash
root@62145c74f28a:/# exit
exit
PS C:\Users\ofarr> docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
PS C:\Users\ofarr> docker run -id ubuntu:14.04
f8caf52014fe697e85769bb84e7a3406a5a800b87eb20f0bfac7755207dadb00
PS C:\Users\ofarr>
PS C:\Users\ofarr> docker ps
CONTAINER ID   IMAGE          COMMAND       CREATED          STATUS          PORTS     NAMES
f8caf52014fe   ubuntu:14.04   "/bin/bash"   14 seconds ago   Up 13 seconds             hungry_gates
PS C:\Users\ofarr>
PS C:\Users\ofarr> docker exec -it f8caf52014fe697e85769bb84e7a3406a5a800b87eb20f0bfac7755207dadb00 /bin/bash
root@f8caf52014fe:/# exit
exit
PS C:\Users\ofarr> docker stop f8caf52014fe697e85769bb84e7a3406a5a800b87eb20f0bfac7755207dadb00
f8caf52014fe697e85769bb84e7a3406a5a800b87eb20f0bfac7755207dadb00
PS C:\Users\ofarr> docker rm $(docker ps -a |grep 14.04|awk '{print $1}')
grep : The term 'grep' is not recognized as the name of a cmdlet, function, script file, or operable program. Check
the spelling of the name, or if a path was included, verify that the path is correct and try again.
At line:1 char:27
+ docker rm $(docker ps -a |grep 14.04|awk '{print $1}')
+                           ~~~~
    + CategoryInfo          : ObjectNotFound: (grep:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

"docker rm" requires at least 1 argument.
See 'docker rm --help'.

Usage:  docker rm [OPTIONS] CONTAINER [CONTAINER...]

Remove one or more containers
PS C:\Users\ofarr> docker ps -a
CONTAINER ID   IMAGE          COMMAND       CREATED          STATUS                            PORTS     NAMES
f8caf52014fe   ubuntu:14.04   "/bin/bash"   5 minutes ago    Exited (137) About a minute ago             hungry_gates
62145c74f28a   ubuntu:14.04   "/bin/bash"   8 minutes ago    Exited (0) 8 minutes ago                    practical_goldberg
f036f1991327   ubuntu:14.04   "/bin/bash"   13 minutes ago   Exited (0) 10 minutes ago                   sweet_khayyam
3f7aa06f299f   hello-world    "/hello"      15 minutes ago   Exited (0) 15 minutes ago                   frosty_wescoff
PS C:\Users\ofarr> docker ps [-a]
"docker ps" accepts no arguments.
See 'docker ps --help'.

Usage:  docker ps [OPTIONS]

List containers
PS C:\Users\ofarr> docker ps --help'
>> '
unknown flag: --help

See 'docker ps --help'.
PS C:\Users\ofarr> docker ps --help

Usage:  docker ps [OPTIONS]

List containers

Options:
  -a, --all             Show all containers (default shows just running)
  -f, --filter filter   Filter output based on conditions provided
      --format string   Pretty-print containers using a Go template
  -n, --last int        Show n last created containers (includes all
                        states) (default -1)
  -l, --latest          Show the latest created container (includes all
                        states)
      --no-trunc        Don't truncate output
  -q, --quiet           Only display container IDs
  -s, --size            Display total file sizes
PS C:\Users\ofarr> docker -a
unknown shorthand flag: 'a' in -a
See 'docker --help'.

Usage:  docker [OPTIONS] COMMAND

A self-sufficient runtime for containers

Options:
      --config string      Location of client config files (default
                           "C:\\Users\\ofarr\\.docker")
  -c, --context string     Name of the context to use to connect to the
                           daemon (overrides DOCKER_HOST env var and
                           default context set with "docker context use")
  -D, --debug              Enable debug mode
  -H, --host list          Daemon socket(s) to connect to
  -l, --log-level string   Set the logging level
                           ("debug"|"info"|"warn"|"error"|"fatal")
                           (default "info")
      --tls                Use TLS; implied by --tlsverify
      --tlscacert string   Trust certs signed only by this CA (default
                           "C:\\Users\\ofarr\\.docker\\ca.pem")
      --tlscert string     Path to TLS certificate file (default
                           "C:\\Users\\ofarr\\.docker\\cert.pem")
      --tlskey string      Path to TLS key file (default
                           "C:\\Users\\ofarr\\.docker\\key.pem")
      --tlsverify          Use TLS and verify the remote
  -v, --version            Print version information and quit

Management Commands:
  builder     Manage builds
  buildx*     Build with BuildKit (Docker Inc., v0.6.3)
  compose*    Docker Compose (Docker Inc., v2.0.0)
  config      Manage Docker configs
  container   Manage containers
  context     Manage contexts
  image       Manage images
  manifest    Manage Docker image manifests and manifest lists
  network     Manage networks
  node        Manage Swarm nodes
  plugin      Manage plugins
  scan*       Docker Scan (Docker Inc., v0.8.0)
  secret      Manage Docker secrets
  service     Manage services
  stack       Manage Docker stacks
  swarm       Manage Swarm
  system      Manage Docker
  trust       Manage trust on Docker images
  volume      Manage volumes

Commands:
  attach      Attach local standard input, output, and error streams to a running container
  build       Build an image from a Dockerfile
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  exec        Run a command in a running container
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  images      List images
  import      Import the contents from a tarball to create a filesystem image
  info        Display system-wide information
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  login       Log in to a Docker registry
  logout      Log out from a Docker registry
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  ps          List containers
  pull        Pull an image or a repository from a registry
  push        Push an image or a repository to a registry
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  run         Run a command in a new container
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  search      Search the Docker Hub for images
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  version     Show the Docker version information
  wait        Block until one or more containers stop, then print their exit codes

Run 'docker COMMAND --help' for more information on a command.

To get more help with docker, check out our guides at https://docs.docker.com/go/guides/

PS C:\Users\ofarr> docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
PS C:\Users\ofarr> docker ps -a
CONTAINER ID   IMAGE          COMMAND       CREATED          STATUS                       PORTS     NAMES
f8caf52014fe   ubuntu:14.04   "/bin/bash"   9 minutes ago    Exited (137) 5 minutes ago             hungry_gates
62145c74f28a   ubuntu:14.04   "/bin/bash"   12 minutes ago   Exited (0) 12 minutes ago              practical_goldberg
f036f1991327   ubuntu:14.04   "/bin/bash"   17 minutes ago   Exited (0) 14 minutes ago              sweet_khayyam
3f7aa06f299f   hello-world    "/hello"      19 minutes ago   Exited (0) 19 minutes ago              frosty_wescoff
PS C:\Users\ofarr>
PS C:\Users\ofarr> docker stop f8caf52014fe
f8caf52014fe
PS C:\Users\ofarr> docker ps -a
CONTAINER ID   IMAGE          COMMAND       CREATED          STATUS                       PORTS     NAMES
f8caf52014fe   ubuntu:14.04   "/bin/bash"   11 minutes ago   Exited (137) 6 minutes ago             hungry_gates
62145c74f28a   ubuntu:14.04   "/bin/bash"   14 minutes ago   Exited (0) 13 minutes ago              practical_goldberg
f036f1991327   ubuntu:14.04   "/bin/bash"   18 minutes ago   Exited (0) 15 minutes ago              sweet_khayyam
3f7aa06f299f   hello-world    "/hello"      20 minutes ago   Exited (0) 20 minutes ago              frosty_wescoff
PS C:\Users\ofarr> docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
PS C:\Users\ofarr> docker run -id --name [youruserid]_ubuntu ubuntu:14.04
docker: Error response from daemon: Invalid container name ([youruserid]_ubuntu), only [a-zA-Z0-9][a-zA-Z0-9_.-] are allowed.
See 'docker run --help'.
PS C:\Users\ofarr> docker run -id --name [youruserid]_ubuntu ubuntu:14.04
docker: Error response from daemon: Invalid container name ([youruserid]_ubuntu), only [a-zA-Z0-9][a-zA-Z0-9_.-] are allowed.
See 'docker run --help'.
PS C:\Users\ofarr> docker run -id --name [ofarr]_ubuntu ubuntu:14.04[ofarr]
docker: invalid reference format.
See 'docker run --help'.
PS C:\Users\ofarr> docker run -id --name ofarr_ubuntu ubuntu:14.04ofarr
Unable to find image 'ubuntu:14.04ofarr' locally
docker: Error response from daemon: manifest for ubuntu:14.04ofarr not found: manifest unknown: manifest unknown.
See 'docker run --help'.
PS C:\Users\ofarr> docker run -id --name ofarr_ubuntu ubuntu:14.04 ofarr
37b8a7aed3bea5713a30dcd3bc590696af0df90448631ba341d146e3de0d38ae
docker: Error response from daemon: OCI runtime create failed: container_linux.go:380: starting container process caused: exec: "ofarr": executable file not found in $PATH: unknown.
PS C:\Users\ofarr> docker run -id --name ofarr
"docker run" requires at least 1 argument.
See 'docker run --help'.

Usage:  docker run [OPTIONS] IMAGE [COMMAND] [ARG...]

Run a command in a new container
PS C:\Users\ofarr> docker run --help

Usage:  docker run [OPTIONS] IMAGE [COMMAND] [ARG...]

Run a command in a new container

Options:
      --add-host list                  Add a custom host-to-IP mapping
                                       (host:ip)
  -a, --attach list                    Attach to STDIN, STDOUT or STDERR
      --blkio-weight uint16            Block IO (relative weight),
                                       between 10 and 1000, or 0 to
                                       disable (default 0)
      --blkio-weight-device list       Block IO weight (relative device
                                       weight) (default [])
      --cap-add list                   Add Linux capabilities
      --cap-drop list                  Drop Linux capabilities
      --cgroup-parent string           Optional parent cgroup for the
                                       container
      --cgroupns string                Cgroup namespace to use
                                       (host|private)
                                       'host':    Run the container in
                                       the Docker host's cgroup namespace
                                       'private': Run the container in
                                       its own private cgroup namespace
                                       '':        Use the cgroup
                                       namespace as configured by the
                                                  default-cgroupns-mode
                                       option on the daemon (default)
      --cidfile string                 Write the container ID to the file
      --cpu-period int                 Limit CPU CFS (Completely Fair
                                       Scheduler) period
      --cpu-quota int                  Limit CPU CFS (Completely Fair
                                       Scheduler) quota
      --cpu-rt-period int              Limit CPU real-time period in
                                       microseconds
      --cpu-rt-runtime int             Limit CPU real-time runtime in
                                       microseconds
  -c, --cpu-shares int                 CPU shares (relative weight)
      --cpus decimal                   Number of CPUs
      --cpuset-cpus string             CPUs in which to allow execution
                                       (0-3, 0,1)
      --cpuset-mems string             MEMs in which to allow execution
                                       (0-3, 0,1)
  -d, --detach                         Run container in background and
                                       print container ID
      --detach-keys string             Override the key sequence for
                                       detaching a container
      --device list                    Add a host device to the container
      --device-cgroup-rule list        Add a rule to the cgroup allowed
                                       devices list
      --device-read-bps list           Limit read rate (bytes per second)
                                       from a device (default [])
      --device-read-iops list          Limit read rate (IO per second)
                                       from a device (default [])
      --device-write-bps list          Limit write rate (bytes per
                                       second) to a device (default [])
      --device-write-iops list         Limit write rate (IO per second)
                                       to a device (default [])
      --disable-content-trust          Skip image verification (default true)
      --dns list                       Set custom DNS servers
      --dns-option list                Set DNS options
      --dns-search list                Set custom DNS search domains
      --domainname string              Container NIS domain name
      --entrypoint string              Overwrite the default ENTRYPOINT
                                       of the image
  -e, --env list                       Set environment variables
      --env-file list                  Read in a file of environment variables
      --expose list                    Expose a port or a range of ports
      --gpus gpu-request               GPU devices to add to the
                                       container ('all' to pass all GPUs)
      --group-add list                 Add additional groups to join
      --health-cmd string              Command to run to check health
      --health-interval duration       Time between running the check
                                       (ms|s|m|h) (default 0s)
      --health-retries int             Consecutive failures needed to
                                       report unhealthy
      --health-start-period duration   Start period for the container to
                                       initialize before starting
                                       health-retries countdown
                                       (ms|s|m|h) (default 0s)
      --health-timeout duration        Maximum time to allow one check to
                                       run (ms|s|m|h) (default 0s)
      --help                           Print usage
  -h, --hostname string                Container host name
      --init                           Run an init inside the container
                                       that forwards signals and reaps
                                       processes
  -i, --interactive                    Keep STDIN open even if not attached
      --ip string                      IPv4 address (e.g., 172.30.100.104)
      --ip6 string                     IPv6 address (e.g., 2001:db8::33)
      --ipc string                     IPC mode to use
      --isolation string               Container isolation technology
      --kernel-memory bytes            Kernel memory limit
  -l, --label list                     Set meta data on a container
      --label-file list                Read in a line delimited file of labels
      --link list                      Add link to another container
      --link-local-ip list             Container IPv4/IPv6 link-local
                                       addresses
      --log-driver string              Logging driver for the container
      --log-opt list                   Log driver options
      --mac-address string             Container MAC address (e.g.,
                                       92:d0:c6:0a:29:33)
  -m, --memory bytes                   Memory limit
      --memory-reservation bytes       Memory soft limit
      --memory-swap bytes              Swap limit equal to memory plus
                                       swap: '-1' to enable unlimited swap
      --memory-swappiness int          Tune container memory swappiness
                                       (0 to 100) (default -1)
      --mount mount                    Attach a filesystem mount to the
                                       container
      --name string                    Assign a name to the container
      --network network                Connect a container to a network
      --network-alias list             Add network-scoped alias for the
                                       container
      --no-healthcheck                 Disable any container-specified
                                       HEALTHCHECK
      --oom-kill-disable               Disable OOM Killer
      --oom-score-adj int              Tune host's OOM preferences (-1000
                                       to 1000)
      --pid string                     PID namespace to use
      --pids-limit int                 Tune container pids limit (set -1
                                       for unlimited)
      --platform string                Set platform if server is
                                       multi-platform capable
      --privileged                     Give extended privileges to this
                                       container
  -p, --publish list                   Publish a container's port(s) to
                                       the host
  -P, --publish-all                    Publish all exposed ports to
                                       random ports
      --pull string                    Pull image before running
                                       ("always"|"missing"|"never")
                                       (default "missing")
      --read-only                      Mount the container's root
                                       filesystem as read only
      --restart string                 Restart policy to apply when a
                                       container exits (default "no")
      --rm                             Automatically remove the container
                                       when it exits
      --runtime string                 Runtime to use for this container
      --security-opt list              Security Options
      --shm-size bytes                 Size of /dev/shm
      --sig-proxy                      Proxy received signals to the
                                       process (default true)
      --stop-signal string             Signal to stop a container
                                       (default "15")
      --stop-timeout int               Timeout (in seconds) to stop a
                                       container
      --storage-opt list               Storage driver options for the
                                       container
      --sysctl map                     Sysctl options (default map[])
      --tmpfs list                     Mount a tmpfs directory
  -t, --tty                            Allocate a pseudo-TTY
      --ulimit ulimit                  Ulimit options (default [])
  -u, --user string                    Username or UID (format:
                                       <name|uid>[:<group|gid>])
      --userns string                  User namespace to use
      --uts string                     UTS namespace to use
  -v, --volume list                    Bind mount a volume
      --volume-driver string           Optional volume driver for the
                                       container
      --volumes-from list              Mount volumes from the specified
                                       container(s)
  -w, --workdir string                 Working directory inside the container
PS C:\Users\ofarr> docker run -id --name
flag needs an argument: --name
See 'docker run --help'.
PS C:\Users\ofarr> echo $UID
PS C:\Users\ofarr> docker build -t test
"docker build" requires exactly 1 argument.
See 'docker build --help'.

Usage:  docker build [OPTIONS] PATH | URL | -

Build an image from a Dockerfile
PS C:\Users\ofarr> docker run -d test
Unable to find image 'test:latest' locally
docker: Error response from daemon: pull access denied for test, repository does not exist or may require 'docker login': denied: requested access to the resource is denied.
See 'docker run --help'.
PS C:\Users\ofarr> docker login
Authenticating with existing credentials...
Login Succeeded
PS C:\Users\ofarr> echo $UID
PS C:\Users\ofarr> docker run
"docker run" requires at least 1 argument.
See 'docker run --help'.

Usage:  docker run [OPTIONS] IMAGE [COMMAND] [ARG...]

Run a command in a new container
PS C:\Users\ofarr> whoami
desktop-92v8g0r\ofarr
PS C:\Users\ofarr> docker run -id --name [ofarr]_ubuntu ubuntu:14.04
docker: Error response from daemon: Invalid container name ([ofarr]_ubuntu), only [a-zA-Z0-9][a-zA-Z0-9_.-] are allowed.
See 'docker run --help'.
PS C:\Users\ofarr> docker run -id --name ofarr_ubuntu ubuntu:14.04
docker: Error response from daemon: Conflict. The container name "/ofarr_ubuntu" is already in use by container "37b8a7aed3bea5713a30dcd3bc590696af0df90448631ba341d146e3de0d38ae". You have to remove (or rename) that container to be able to reuse that name.
See 'docker run --help'.
PS C:\Users\ofarr> docker stop 37b8a7aed3bea5713a30dcd3bc590696af0df90448631ba341d146e3de0d38ae
37b8a7aed3bea5713a30dcd3bc590696af0df90448631ba341d146e3de0d38ae
PS C:\Users\ofarr> docker run -id --name ofarr_ubuntu ubuntu:14.04
docker: Error response from daemon: Conflict. The container name "/ofarr_ubuntu" is already in use by container "37b8a7aed3bea5713a30dcd3bc590696af0df90448631ba341d146e3de0d38ae". You have to remove (or rename) that container to be able to reuse that name.
See 'docker run --help'.
PS C:\Users\ofarr> docker rm @(docker ps -aq)
37b8a7aed3be
f8caf52014fe
62145c74f28a
f036f1991327
3f7aa06f299f
PS C:\Users\ofarr> docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
PS C:\Users\ofarr> docker run -id --name ofarr_ubuntu ubuntu:14.04
70eb2803668a5aaf1f7e9c83ed667267496587cd0cdf9bfa3d68faaec75d6841
PS C:\Users\ofarr> docker exec -it ofarr_ubuntu /bin/bash
root@70eb2803668a:/# uname -a
Linux 70eb2803668a 5.10.16.3-microsoft-standard-WSL2 #1 SMP Fri Apr 2 22:23:49 UTC 2021 x86_64 x86_64 x86_64 GNU/Linux
root@70eb2803668a:/# apt-get update
Get:1 http://security.ubuntu.com trusty-security InRelease [65.9 kB]
Ign http://archive.ubuntu.com trusty InRelease
Get:2 http://security.ubuntu.com trusty-security/main amd64 Packages [1032 kB]
Get:3 http://archive.ubuntu.com trusty-updates InRelease [65.9 kB]
Get:4 https://esm.ubuntu.com trusty-infra-security InRelease
Get:5 https://esm.ubuntu.com trusty-infra-updates InRelease
Get:6 https://esm.ubuntu.com trusty-infra-security/main amd64 Packages
Get:7 http://archive.ubuntu.com trusty-backports InRelease [65.9 kB]
Get:8 http://security.ubuntu.com trusty-security/restricted amd64 Packages [18.1 kB]
Get:9 http://security.ubuntu.com trusty-security/universe amd64 Packages [378 kB]
Hit http://archive.ubuntu.com trusty Release.gpg
Get:10 http://archive.ubuntu.com trusty-updates/main amd64 Packages [1460 kB]
Get:11 http://security.ubuntu.com trusty-security/multiverse amd64 Packages [4730 B]
Get:12 https://esm.ubuntu.com trusty-infra-updates/main amd64 Packages
Get:13 http://archive.ubuntu.com trusty-updates/restricted amd64 Packages [21.4 kB]
Get:14 http://archive.ubuntu.com trusty-updates/universe amd64 Packages [671 kB]
Get:15 http://archive.ubuntu.com trusty-updates/multiverse amd64 Packages [16.1 kB]
Get:16 http://archive.ubuntu.com trusty-backports/main amd64 Packages [14.7 kB]
Get:17 http://archive.ubuntu.com trusty-backports/restricted amd64 Packages [40 B]
Get:18 http://archive.ubuntu.com trusty-backports/universe amd64 Packages [52.5 kB]
Get:19 http://archive.ubuntu.com trusty-backports/multiverse amd64 Packages [1392 B]
Hit http://archive.ubuntu.com trusty Release
Get:20 http://archive.ubuntu.com trusty/main amd64 Packages [1743 kB]
Get:21 http://archive.ubuntu.com trusty/restricted amd64 Packages [16.0 kB]
Get:22 http://archive.ubuntu.com trusty/universe amd64 Packages [7589 kB]
Get:23 http://archive.ubuntu.com trusty/multiverse amd64 Packages [169 kB]
Fetched 13.9 MB in 40s (346 kB/s)
Reading package lists... Done
root@70eb2803668a:/# apt-get install -y vim
Reading package lists... Done
Building dependency tree
Reading state information... Done
The following extra packages will be installed:
  libgpm2 libpython2.7 libpython2.7-minimal libpython2.7-stdlib vim-runtime
Suggested packages:
  gpm ctags vim-doc vim-scripts
The following NEW packages will be installed:
  libgpm2 libpython2.7 libpython2.7-minimal libpython2.7-stdlib vim
  vim-runtime
0 upgraded, 6 newly installed, 0 to remove and 1 not upgraded.
Need to get 9076 kB of archives.
After this operation, 42.9 MB of additional disk space will be used.
Get:1 http://archive.ubuntu.com/ubuntu/ trusty/main libgpm2 amd64 1.20.4-6.1 [16.5 kB]
Get:2 http://archive.ubuntu.com/ubuntu/ trusty-updates/main libpython2.7-minimal amd64 2.7.6-8ubuntu0.5 [308 kB]
Get:3 http://archive.ubuntu.com/ubuntu/ trusty-updates/main libpython2.7-stdlib amd64 2.7.6-8ubuntu0.5 [1872 kB]
Get:4 http://archive.ubuntu.com/ubuntu/ trusty-updates/main libpython2.7 amd64 2.7.6-8ubuntu0.5 [1041 kB]
Get:5 http://archive.ubuntu.com/ubuntu/ trusty-updates/main vim-runtime all 2:7.4.052-1ubuntu3.1 [4882 kB]
Get:6 http://archive.ubuntu.com/ubuntu/ trusty-updates/main vim amd64 2:7.4.052-1ubuntu3.1 [955 kB]
Fetched 9076 kB in 28s (324 kB/s)
Selecting previously unselected package libgpm2:amd64.
(Reading database ... 12097 files and directories currently installed.)
Preparing to unpack .../libgpm2_1.20.4-6.1_amd64.deb ...
Unpacking libgpm2:amd64 (1.20.4-6.1) ...
Selecting previously unselected package libpython2.7-minimal:amd64.
Preparing to unpack .../libpython2.7-minimal_2.7.6-8ubuntu0.5_amd64.deb ...
Unpacking libpython2.7-minimal:amd64 (2.7.6-8ubuntu0.5) ...
Selecting previously unselected package libpython2.7-stdlib:amd64.
Preparing to unpack .../libpython2.7-stdlib_2.7.6-8ubuntu0.5_amd64.deb ...
Unpacking libpython2.7-stdlib:amd64 (2.7.6-8ubuntu0.5) ...
Selecting previously unselected package libpython2.7:amd64.
Preparing to unpack .../libpython2.7_2.7.6-8ubuntu0.5_amd64.deb ...
Unpacking libpython2.7:amd64 (2.7.6-8ubuntu0.5) ...
Selecting previously unselected package vim-runtime.
Preparing to unpack .../vim-runtime_2%3a7.4.052-1ubuntu3.1_all.deb ...
Adding 'diversion of /usr/share/vim/vim74/doc/help.txt to /usr/share/vim/vim74/doc/help.txt.vim-tiny by vim-runtime'
Adding 'diversion of /usr/share/vim/vim74/doc/tags to /usr/share/vim/vim74/doc/tags.vim-tiny by vim-runtime'
Unpacking vim-runtime (2:7.4.052-1ubuntu3.1) ...
Selecting previously unselected package vim.
Preparing to unpack .../vim_2%3a7.4.052-1ubuntu3.1_amd64.deb ...
Unpacking vim (2:7.4.052-1ubuntu3.1) ...
Setting up libgpm2:amd64 (1.20.4-6.1) ...
Setting up libpython2.7-minimal:amd64 (2.7.6-8ubuntu0.5) ...
Setting up libpython2.7-stdlib:amd64 (2.7.6-8ubuntu0.5) ...
Setting up libpython2.7:amd64 (2.7.6-8ubuntu0.5) ...
Setting up vim-runtime (2:7.4.052-1ubuntu3.1) ...
Processing /usr/share/vim/addons/doc
Setting up vim (2:7.4.052-1ubuntu3.1) ...
update-alternatives: using /usr/bin/vim.basic to provide /usr/bin/vim (vim) in auto mode
update-alternatives: using /usr/bin/vim.basic to provide /usr/bin/vimdiff (vimdiff) in auto mode
update-alternatives: using /usr/bin/vim.basic to provide /usr/bin/rvim (rvim) in auto mode
update-alternatives: using /usr/bin/vim.basic to provide /usr/bin/rview (rview) in auto mode
update-alternatives: using /usr/bin/vim.basic to provide /usr/bin/vi (vi) in auto mode
update-alternatives: using /usr/bin/vim.basic to provide /usr/bin/view (view) in auto mode
update-alternatives: using /usr/bin/vim.basic to provide /usr/bin/ex (ex) in auto mode
update-alternatives: using /usr/bin/vim.basic to provide /usr/bin/editor (editor) in auto mode
Processing triggers for libc-bin (2.19-0ubuntu6.15) ...
root@70eb2803668a:/# which vim
/usr/bin/vim
root@70eb2803668a:/# cd /; ls -la; whoami
total 84
drwxr-xr-x   1 root root 4096 Oct 17 16:01 .
drwxr-xr-x   1 root root 4096 Oct 17 16:01 ..
-rwxr-xr-x   1 root root    0 Oct 17 16:01 .dockerenv
drwxr-xr-x   2 root root 4096 Dec 17  2019 bin
drwxr-xr-x   2 root root 4096 Apr 10  2014 boot
drwxr-xr-x   5 root root  340 Oct 17 16:01 dev
drwxr-xr-x   1 root root 4096 Oct 17 16:07 etc
drwxr-xr-x   2 root root 4096 Apr 10  2014 home
drwxr-xr-x  12 root root 4096 Dec 17  2019 lib
drwxr-xr-x   2 root root 4096 Dec 17  2019 lib64
drwxr-xr-x   2 root root 4096 Dec 17  2019 media
drwxr-xr-x   2 root root 4096 Apr 10  2014 mnt
drwxr-xr-x   2 root root 4096 Dec 17  2019 opt
dr-xr-xr-x 228 root root    0 Oct 17 16:01 proc
drwx------   2 root root 4096 Dec 17  2019 root
drwxr-xr-x   1 root root 4096 Mar 25  2021 run
drwxr-xr-x   1 root root 4096 Mar 25  2021 sbin
drwxr-xr-x   2 root root 4096 Dec 17  2019 srv
dr-xr-xr-x  11 root root    0 Oct 17 16:01 sys
drwxrwxrwt   1 root root 4096 Oct 17 16:07 tmp
drwxr-xr-x   1 root root 4096 Dec 17  2019 usr
drwxr-xr-x   1 root root 4096 Dec 17  2019 var
root
root@70eb2803668a:/# exit
exit
PS C:\Users\ofarr> docker stats -a --no-stream
CONTAINER ID   NAME           CPU %     MEM USAGE / LIMIT     MEM %     NET I/O          BLOCK I/O   PIDS
70eb2803668a   ofarr_ubuntu   0.00%     24.95MiB / 4.524GiB   0.54%     23.9MB / 401kB   0B / 0B     1
PS C:\Users\ofarr> docker stop ofarr_ubuntu
ofarr_ubuntu
PS C:\Users\ofarr> docker start ofarr_ubuntu
ofarr_ubuntu
PS C:\Users\ofarr> docker kill ofarr_ubuntu
ofarr_ubuntu
PS C:\Users\ofarr> docker kill --help

Usage:  docker kill [OPTIONS] CONTAINER [CONTAINER...]

Kill one or more running containers

Options:
  -s, --signal string   Signal to send to the container (default "KILL")
PS C:\Users\ofarr> ls


    Directory: C:\Users\ofarr


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
d-----         5/18/2021   5:02 PM                .anaconda
d-----          5/5/2021  10:29 AM                .anaconda_backup
d-----        10/27/2019   3:41 PM                .cisco
d-----          6/6/2021   2:18 AM                .conda
d-----         4/18/2021   2:24 PM                .config
d-----         5/24/2021   9:12 AM                .dbus-keyrings
d-----        10/17/2021  10:55 AM                .docker
d-----         5/27/2021  11:18 AM                .ipynb_checkpoints
d-----         10/3/2019  11:40 AM                .ipython
d-----          5/5/2021  10:33 AM                .jupyter
d-----          5/5/2021  10:33 AM                .matplotlib
d-----         4/15/2021  11:52 AM                .omnidb
d-----          6/8/2020   3:33 PM                .spyder-py3
d-----        10/13/2021   2:48 PM                .VirtualBox
d-----          4/9/2021   1:31 PM                .vscode
d-r---         3/10/2021   4:23 PM                3D Objects
d-----         5/19/2021   9:23 PM                anaconda3
d-r---         3/10/2021   4:23 PM                Contacts
d-r---        10/17/2021  10:14 AM                Desktop
d-r---         5/10/2021   6:53 PM                Documents
d-r---        10/17/2021  10:10 AM                Downloads
d-r---         3/10/2021   4:23 PM                Favorites
d-----        10/12/2021   3:23 PM                getting-started
d-r---         3/10/2021   4:23 PM                Links
d-r---         3/10/2021   4:23 PM                Music
dar--l        10/17/2021   9:41 AM                OneDrive
d-r---         10/8/2021  11:59 AM                Pictures
d-r---         3/10/2021   4:23 PM                Saved Games
d-r---         3/10/2021   4:23 PM                Searches
d-r---         3/10/2021   4:23 PM                Videos
d-----         10/3/2019   1:28 PM                VirtualBox VMs
-a----        10/17/2021   9:55 AM           2715 .bash_history
-a----          6/5/2021   8:15 PM             43 .condarc
-a----         10/8/2021   5:42 PM             40 .gitconfig
-a----          5/5/2021  11:00 AM              7 .python_history
-a----          4/8/2021  12:49 AM         223192 Documents.ipynb
-a----          6/7/2020   2:34 PM           2120 indeed.csv
-a----         10/3/2019  11:19 AM       76157168 mc3.exe
-a----         5/27/2021  11:24 AM           8871 Untitled.ipynb


PS C:\Users\ofarr> cd '.\Documents\Grad Classes\Year3\Software\lab1'
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker run -it -v ~/lab1:/lab1 ubuntu:14.04 /bin/bash
root@6e5b17ea6cba:/# exit
exit
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker run -it -v ~/lab1:/clab1 ubuntu:14.04 /bin/bash
root@71a420ad93a7:/# cat /clab1/lab1.txt
cat: /clab1/lab1.txt: No such file or directory
root@71a420ad93a7:/# ls
bin  boot  clab1  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@71a420ad93a7:/# cd clab1
root@71a420ad93a7:/clab1# ls
root@71a420ad93a7:/clab1# cd ..
root@71a420ad93a7:/# ls
bin  boot  clab1  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@71a420ad93a7:/# cd clab1
root@71a420ad93a7:/clab1# touch clab1.txt
root@71a420ad93a7:/clab1# ls
clab1.txt
root@71a420ad93a7:/clab1# cd ..
root@71a420ad93a7:/# ls
bin  boot  clab1  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@71a420ad93a7:/# cat /clab1/lab1.txt
cat: /clab1/lab1.txt: No such file or directory
root@71a420ad93a7:/# cat /clab1/clab1.txt
root@71a420ad93a7:/# exit
exit
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker run -it -v ~/lab1:/clab1 ubuntu:14.04 /bin/bash
root@db5b3b48db2f:/# ls -la /clab1
total 4
drwxr-xr-x 2 root root   60 Oct 17 16:29 .
drwxr-xr-x 1 root root 4096 Oct 17 16:31 ..
-rw-r--r-- 1 root root    0 Oct 17 16:29 clab1.txt
root@db5b3b48db2f:/# exit
exit
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker rm @(docker ps -aq)
db5b3b48db2f
71a420ad93a7
6e5b17ea6cba
70eb2803668a
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker cp /lab1.txt [youruserid]_ubuntu:/clab1.txt        CreateFile C:\\lab1.txt: The system cannot find the file specified.
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> pwd

Path
----
C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1


PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker cp lab1.txt [youruserid]_ubuntu:/clab1.txt
Error: No such container:path: [youruserid]_ubuntu:\
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker cp lab1.txt ofarr_ubuntu:/clab1.txt
Error: No such container:path: ofarr_ubuntu:\
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker start offar_ubuntu
Error response from daemon: No such container: offar_ubuntu
Error: failed to start containers: offar_ubuntu
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker ps
CONTAINER ID   IMAGE     COMMAND   CREATED   STATUS    PORTS     NAMES
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker run -id --name ofarr_ubuntu ubuntu:14.04
a574cd4e3abc261eba63cb73a47742a1cdf91aacbead91ecd84af2c6cbafc949
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker start ofarr_ubutuntu
Error response from daemon: No such container: ofarr_ubutuntu
Error: failed to start containers: ofarr_ubutuntu
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker exec -it ofarr_ubuntu /bin/bash
root@a574cd4e3abc:/# apt-get update
Get:1 http://security.ubuntu.com trusty-security InRelease [65.9 kB]
Ign http://archive.ubuntu.com trusty InRelease
Get:2 http://security.ubuntu.com trusty-security/main amd64 Packages [1032 kB]
Get:3 http://archive.ubuntu.com trusty-updates InRelease [65.9 kB]
Get:4 http://archive.ubuntu.com trusty-backports InRelease [65.9 kB]
Get:5 https://esm.ubuntu.com trusty-infra-security InRelease
Get:6 https://esm.ubuntu.com trusty-infra-updates InRelease
Hit http://archive.ubuntu.com trusty Release.gpg
Get:7 https://esm.ubuntu.com trusty-infra-security/main amd64 Packages
Get:8 http://archive.ubuntu.com trusty-updates/main amd64 Packages [1460 kB]
Get:9 http://security.ubuntu.com trusty-security/restricted amd64 Packages [18.1 kB]
Get:10 http://security.ubuntu.com trusty-security/universe amd64 Packages [378 kB]
Get:11 https://esm.ubuntu.com trusty-infra-updates/main amd64 Packages
Get:12 http://security.ubuntu.com trusty-security/multiverse amd64 Packages [4730 B]
Get:13 http://archive.ubuntu.com trusty-updates/restricted amd64 Packages [21.4 kB]
Get:14 http://archive.ubuntu.com trusty-updates/universe amd64 Packages [671 kB]
Get:15 http://archive.ubuntu.com trusty-updates/multiverse amd64 Packages [16.1 kB]
Get:16 http://archive.ubuntu.com trusty-backports/main amd64 Packages [14.7 kB]
Get:17 http://archive.ubuntu.com trusty-backports/restricted amd64 Packages [40 B]
Get:18 http://archive.ubuntu.com trusty-backports/universe amd64 Packages [52.5 kB]
Get:19 http://archive.ubuntu.com trusty-backports/multiverse amd64 Packages [1392 B]
Hit http://archive.ubuntu.com trusty Release
Get:20 http://archive.ubuntu.com trusty/main amd64 Packages [1743 kB]
Get:21 http://archive.ubuntu.com trusty/restricted amd64 Packages [16.0 kB]
Get:22 http://archive.ubuntu.com trusty/universe amd64 Packages [7589 kB]
Get:23 http://archive.ubuntu.com trusty/multiverse amd64 Packages [169 kB]
Fetched 13.9 MB in 35s (392 kB/s)
Reading package lists... Done
root@a574cd4e3abc:/# exit
exit
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker ps
CONTAINER ID   IMAGE          COMMAND       CREATED         STATUS         PORTS     NAMES
a574cd4e3abc   ubuntu:14.04   "/bin/bash"   2 minutes ago   Up 2 minutes             ofarr_ubuntu
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker exec -it ofarr_ubuntu /bin/bash
root@a574cd4e3abc:/# ls -la /clab1.txt
ls: cannot access /clab1.txt: No such file or directory
root@a574cd4e3abc:/# ls
bin  boot  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@a574cd4e3abc:/# exit
exit
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker run -it -v clab1 ubuntu:14.04 /bin/bash
root@61df9f965f82:/# ls
bin  boot  clab1  dev  etc  home  lib  lib64  media  mnt  opt  proc  root  run  sbin  srv  sys  tmp  usr  var
root@61df9f965f82:/# cat /clab1/lab1.txt
cat: /clab1/lab1.txt: No such file or directory
root@61df9f965f82:/# vi /clab1.txt
root@61df9f965f82:/# exit
exit
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> l
l : The term 'l' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the
spelling of the name, or if a path was included, verify that the path is correct and try again.
At line:1 char:1
+ l
+ ~
    + CategoryInfo          : ObjectNotFound: (l:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> ls


    Directory: C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
-a----        10/17/2021  11:38 AM              0 clab1.txt
-a----        10/17/2021   9:43 AM             15 full_output.txt
-a----        10/17/2021  11:39 AM              0 lab1.txt
-a----        10/17/2021  11:52 AM           2304 responses.txt
-a----        10/17/2021  11:51 AM           1463 runscript.windows.sh


PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker images
REPOSITORY    TAG       IMAGE ID       CREATED        SIZE
hello-world   latest    feb5d9fea6a5   3 weeks ago    13.3kB
ubuntu        14.04     13b66b487594   6 months ago   197MB
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker commit ofarr_ubuntu ubuntu:ofarr_update            sha256:18c7a8121b74b8253344da9c97b4a6ec25a55102293c4bf679376996fbc62fd0
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker images
REPOSITORY    TAG            IMAGE ID       CREATED          SIZE
ubuntu        ofarr_update   18c7a8121b74   30 seconds ago   211MB
hello-world   latest         feb5d9fea6a5   3 weeks ago      13.3kB
ubuntu        14.04          13b66b487594   6 months ago     197MB
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker inspect ubuntu:ofarr_update
[
    {
        "Id": "sha256:18c7a8121b74b8253344da9c97b4a6ec25a55102293c4bf679376996fbc62fd0",
        "RepoTags": [
            "ubuntu:ofarr_update"
        ],
        "RepoDigests": [],
        "Parent": "sha256:13b66b487594a1f2b75396013bc05d29d9f527852d96c5577cc4f187559875d0",
        "Comment": "",
        "Created": "2021-10-17T16:53:21.166565862Z",
        "Container": "a574cd4e3abc261eba63cb73a47742a1cdf91aacbead91ecd84af2c6cbafc949",
        "ContainerConfig": {
            "Hostname": "a574cd4e3abc",
            "Domainname": "",
            "User": "",
            "AttachStdin": false,
            "AttachStdout": false,
            "AttachStderr": false,
            "Tty": false,
            "OpenStdin": true,
            "StdinOnce": false,
            "Env": [
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            ],
            "Cmd": [
                "/bin/bash"
            ],
            "Image": "ubuntu:14.04",
            "Volumes": null,
            "WorkingDir": "",
            "Entrypoint": null,
            "OnBuild": null,
            "Labels": {}
        },
        "DockerVersion": "20.10.8",
        "Author": "",
        "Config": {
            "Hostname": "a574cd4e3abc",
            "Domainname": "",
            "User": "",
            "AttachStdin": false,
            "AttachStdout": false,
            "AttachStderr": false,
            "Tty": false,
            "OpenStdin": true,
            "StdinOnce": false,
            "Env": [
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            ],
            "Cmd": [
                "/bin/bash"
            ],
            "Image": "ubuntu:14.04",
            "Volumes": null,
            "WorkingDir": "",
            "Entrypoint": null,
            "OnBuild": null,
            "Labels": {}
        },
        "Architecture": "amd64",
        "Os": "linux",
        "Size": 210506850,
        "VirtualSize": 210506850,
        "GraphDriver": {
            "Data": {
                "LowerDir": "/var/lib/docker/overlay2/5d8a29a78528fe01dd9645d73fa703b3b7479ff8341a1c3450657f7e8bdafc16/diff:/var/lib/docker/overlay2/89ffba4c61de3e1f52306a154fdf54f7c8d195df55f7382c6ce50bf39ee9c62d/diff:/var/lib/docker/overlay2/92b453bf17339167de39f305e311c1b5ad52fbec29ac22f71d7e621fabefd4d0/diff",
                "MergedDir": "/var/lib/docker/overlay2/8f31a7400cfa4b0be1cd85201841344f8a4c1e755dc1fc6b55ff0fdfef09e4f7/merged",
                "UpperDir": "/var/lib/docker/overlay2/8f31a7400cfa4b0be1cd85201841344f8a4c1e755dc1fc6b55ff0fdfef09e4f7/diff",
                "WorkDir": "/var/lib/docker/overlay2/8f31a7400cfa4b0be1cd85201841344f8a4c1e755dc1fc6b55ff0fdfef09e4f7/work"
            },
            "Name": "overlay2"
        },
        "RootFS": {
            "Type": "layers",
            "Layers": [
                "sha256:f2fa9f4cf8fd0a521d40e34492b522cee3f35004047e617c75fadeb8bfd1e6b7",
                "sha256:30d3c4334a2379748937816c01f5c972a8291a5ccc958d6b33d735457a16196e",
                "sha256:83109fa660b2ed9307948505abd3c1f24c27c64009691067edb765bd3714b98d",
                "sha256:cdac24fef5bcd5e4e4262c7516ac7059bdf644d89c5914dbcacb3297fa87f888"
            ]
        },
        "Metadata": {
            "LastTagTime": "2021-10-17T16:53:21.183535236Z"
        }
    }
]
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker run busybox echo Hello 51205 Class Peeps!
Unable to find image 'busybox:latest' locally
latest: Pulling from library/busybox
24fb2886d6f6: Pull complete
Digest: sha256:f7ca5a32c10d51aeda3b4d01c61c6061f497893d7f6628b92f822f7117182a57
Status: Downloaded newer image for busybox:latest
Hello 51205 Class Peeps!
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker stop ofarr_ubuntu
ofarr_ubuntu
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker save -o ubuntu_ofarr_update.tar ubuntu:ofarr_update
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker rmi ubuntu:ofarr_update
Untagged: ubuntu:ofarr_update
Deleted: sha256:18c7a8121b74b8253344da9c97b4a6ec25a55102293c4bf679376996fbc62fd0
Deleted: sha256:8ae222ab21b54fe8a9e8b56d62e1ff1207d2a9d101a12a32db33eb3e4d28ed23
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker images
REPOSITORY    TAG       IMAGE ID       CREATED        SIZE
hello-world   latest    feb5d9fea6a5   3 weeks ago    13.3kB
busybox       latest    16ea53ea7c65   4 weeks ago    1.24MB
ubuntu        14.04     13b66b487594   6 months ago   197MB
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker load  < ubuntu_ofarr_update.tar
At line:1 char:14
+ docker load  < ubuntu_ofarr_update.tar
+              ~
The '<' operator is reserved for future use.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : RedirectionNotSupported

PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker images
REPOSITORY    TAG       IMAGE ID       CREATED        SIZE
hello-world   latest    feb5d9fea6a5   3 weeks ago    13.3kB
busybox       latest    16ea53ea7c65   4 weeks ago    1.24MB
ubuntu        14.04     13b66b487594   6 months ago   197MB
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker run -it ubuntu:ofarr_update echo Hello 51205 Class Peeps!
Unable to find image 'ubuntu:ofarr_update' locally
docker: Error response from daemon: manifest for ubuntu:ofarr_update not found: manifest unknown: manifest unknown.
See 'docker run --help'.
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker start ofarr_ubuntu                                 ofarr_ubuntu
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker images
REPOSITORY    TAG       IMAGE ID       CREATED        SIZE
hello-world   latest    feb5d9fea6a5   3 weeks ago    13.3kB
busybox       latest    16ea53ea7c65   4 weeks ago    1.24MB
ubuntu        14.04     13b66b487594   6 months ago   197MB
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker load  < ubuntu_ofarr_update.tar
At line:1 char:14
+ docker load  < ubuntu_ofarr_update.tar
+              ~
The '<' operator is reserved for future use.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : RedirectionNotSupported

PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker load  <ubuntu_ofarr_update.tar
At line:1 char:14
+ docker load  <ubuntu_ofarr_update.tar
+              ~
The '<' operator is reserved for future use.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : RedirectionNotSupported

PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker load  | ubuntu_ofarr_update.tar
ubuntu_ofarr_update.tar : The term 'ubuntu_ofarr_update.tar' is not recognized as the name of a cmdlet, function,
script file, or operable program. Check the spelling of the name, or if a path was included, verify that the path is
correct and try again.
At line:1 char:16
+ docker load  | ubuntu_ofarr_update.tar
+                ~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ubuntu_ofarr_update.tar:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException


Suggestion [3,General]: The command ubuntu_ofarr_update.tar was not found, but does exist in the current location. Windows PowerShell does not load commands from the current location by default. If you trust this command, instead type: ".\ubuntu_ofarr_update.tar". See "get-help about_Command_Precedence" for more details.
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker images
REPOSITORY    TAG       IMAGE ID       CREATED        SIZE
hello-world   latest    feb5d9fea6a5   3 weeks ago    13.3kB
busybox       latest    16ea53ea7c65   4 weeks ago    1.24MB
ubuntu        14.04     13b66b487594   6 months ago   197MB
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker load  | ubuntu_ofarr.tar
ubuntu_ofarr.tar : The term 'ubuntu_ofarr.tar' is not recognized as the name of a cmdlet, function, script file, or
operable program. Check the spelling of the name, or if a path was included, verify that the path is correct and try
again.
At line:1 char:16
+ docker load  | ubuntu_ofarr.tar
+                ~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ubuntu_ofarr.tar:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker load  | ubuntu.tar
ubuntu.tar : The term 'ubuntu.tar' is not recognized as the name of a cmdlet, function, script file, or operable
program. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.
At line:1 char:16
+ docker load  | ubuntu.tar
+                ~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ubuntu.tar:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker load  | ofarr_ubuntu.tar
ofarr_ubuntu.tar : The term 'ofarr_ubuntu.tar' is not recognized as the name of a cmdlet, function, script file, or
operable program. Check the spelling of the name, or if a path was included, verify that the path is correct and try
again.
At line:1 char:16
+ docker load  | ofarr_ubuntu.tar
+                ~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (ofarr_ubuntu.tar:String) [], CommandNotFoundException
    + FullyQualifiedErrorId : CommandNotFoundException

PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker load  /c "ubuntu_ofarr_update.tar"
"docker load" accepts no arguments.
See 'docker load --help'.

Usage:  docker load [OPTIONS]

Load an image from a tar archive or STDIN
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker run -it ubuntu:ofarr_update echo Hello 51205 Class Peeps!
Unable to find image 'ubuntu:ofarr_update' locally
docker: Error response from daemon: manifest for ubuntu:ofarr_update not found: manifest unknown: manifest unknown.
See 'docker run --help'.
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker images
REPOSITORY    TAG       IMAGE ID       CREATED        SIZE
hello-world   latest    feb5d9fea6a5   3 weeks ago    13.3kB
busybox       latest    16ea53ea7c65   4 weeks ago    1.24MB
ubuntu        14.04     13b66b487594   6 months ago   197MB
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker commit ofarr_ubuntu ubuntu:ofarr_update            sha256:b15ca26ed72e9345aaedc7e7eb67bfb410852c298486e2444edb75b1bf2b1b04
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker images
REPOSITORY    TAG            IMAGE ID       CREATED         SIZE
ubuntu        ofarr_update   b15ca26ed72e   6 seconds ago   211MB
hello-world   latest         feb5d9fea6a5   3 weeks ago     13.3kB
busybox       latest         16ea53ea7c65   4 weeks ago     1.24MB
ubuntu        14.04          13b66b487594   6 months ago    197MB
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker inspect ubuntu:ofarr_update
[
    {
        "Id": "sha256:b15ca26ed72e9345aaedc7e7eb67bfb410852c298486e2444edb75b1bf2b1b04",
        "RepoTags": [
            "ubuntu:ofarr_update"
        ],
        "RepoDigests": [],
        "Parent": "sha256:13b66b487594a1f2b75396013bc05d29d9f527852d96c5577cc4f187559875d0",
        "Comment": "",
        "Created": "2021-10-17T17:07:44.056561762Z",
        "Container": "a574cd4e3abc261eba63cb73a47742a1cdf91aacbead91ecd84af2c6cbafc949",
        "ContainerConfig": {
            "Hostname": "a574cd4e3abc",
            "Domainname": "",
            "User": "",
            "AttachStdin": false,
            "AttachStdout": false,
            "AttachStderr": false,
            "Tty": false,
            "OpenStdin": true,
            "StdinOnce": false,
            "Env": [
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            ],
            "Cmd": [
                "/bin/bash"
            ],
            "Image": "ubuntu:14.04",
            "Volumes": null,
            "WorkingDir": "",
            "Entrypoint": null,
            "OnBuild": null,
            "Labels": {}
        },
        "DockerVersion": "20.10.8",
        "Author": "",
        "Config": {
            "Hostname": "a574cd4e3abc",
            "Domainname": "",
            "User": "",
            "AttachStdin": false,
            "AttachStdout": false,
            "AttachStderr": false,
            "Tty": false,
            "OpenStdin": true,
            "StdinOnce": false,
            "Env": [
                "PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin"
            ],
            "Cmd": [
                "/bin/bash"
            ],
            "Image": "ubuntu:14.04",
            "Volumes": null,
            "WorkingDir": "",
            "Entrypoint": null,
            "OnBuild": null,
            "Labels": {}
        },
        "Architecture": "amd64",
        "Os": "linux",
        "Size": 210506850,
        "VirtualSize": 210506850,
        "GraphDriver": {
            "Data": {
                "LowerDir": "/var/lib/docker/overlay2/5d8a29a78528fe01dd9645d73fa703b3b7479ff8341a1c3450657f7e8bdafc16/diff:/var/lib/docker/overlay2/89ffba4c61de3e1f52306a154fdf54f7c8d195df55f7382c6ce50bf39ee9c62d/diff:/var/lib/docker/overlay2/92b453bf17339167de39f305e311c1b5ad52fbec29ac22f71d7e621fabefd4d0/diff",
                "MergedDir": "/var/lib/docker/overlay2/8a69ba30490d2719eb4b7a2e7c3f102f8830e661eb2537f742c4e57d71e948f6/merged",
                "UpperDir": "/var/lib/docker/overlay2/8a69ba30490d2719eb4b7a2e7c3f102f8830e661eb2537f742c4e57d71e948f6/diff",
                "WorkDir": "/var/lib/docker/overlay2/8a69ba30490d2719eb4b7a2e7c3f102f8830e661eb2537f742c4e57d71e948f6/work"
            },
            "Name": "overlay2"
        },
        "RootFS": {
            "Type": "layers",
            "Layers": [
                "sha256:f2fa9f4cf8fd0a521d40e34492b522cee3f35004047e617c75fadeb8bfd1e6b7",
                "sha256:30d3c4334a2379748937816c01f5c972a8291a5ccc958d6b33d735457a16196e",
                "sha256:83109fa660b2ed9307948505abd3c1f24c27c64009691067edb765bd3714b98d",
                "sha256:cdac24fef5bcd5e4e4262c7516ac7059bdf644d89c5914dbcacb3297fa87f888"
            ]
        },
        "Metadata": {
            "LastTagTime": "2021-10-17T17:07:44.069396627Z"
        }
    }
]
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker run busybox echo Hello 51205 Class Peeps!
Hello 51205 Class Peeps!
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker stop ofarr_ubuntu
ofarr_ubuntu
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker save -o ubuntu_ofarr_update.tar ubuntu:ofarr_update
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker rmi ubuntu:ofarr_update
Untagged: ubuntu:ofarr_update
Deleted: sha256:b15ca26ed72e9345aaedc7e7eb67bfb410852c298486e2444edb75b1bf2b1b04
Deleted: sha256:8ae222ab21b54fe8a9e8b56d62e1ff1207d2a9d101a12a32db33eb3e4d28ed23
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker images
REPOSITORY    TAG       IMAGE ID       CREATED        SIZE
hello-world   latest    feb5d9fea6a5   3 weeks ago    13.3kB
busybox       latest    16ea53ea7c65   4 weeks ago    1.24MB
ubuntu        14.04     13b66b487594   6 months ago   197MB
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker load  < ubuntu_ofarr_update.tar
At line:1 char:14
+ docker load  < ubuntu_ofarr_update.tar
+              ~
The '<' operator is reserved for future use.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : RedirectionNotSupported

PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker run -it ubuntu:ofarr_update echo Hello 51205 Class Peeps!
Unable to find image 'ubuntu:ofarr_update' locally
docker: Error response from daemon: manifest for ubuntu:ofarr_update not found: manifest unknown: manifest unknown.
See 'docker run --help'.
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker start ofarr_ubuntu
ofarr_ubuntu
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker run -it ubuntu:ofarr_update echo Hello 51205 Class Peeps!
Unable to find image 'ubuntu:ofarr_update' locally
docker: Error response from daemon: manifest for ubuntu:ofarr_update not found: manifest unknown: manifest unknown.
See 'docker run --help'.
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker save -o ubuntu_ofarr_update.tar ubuntu:ofarr_update
Error response from daemon: reference does not exist
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker commit ofarr_ubuntu ubuntu:ofarr_update
sha256:85fcc2169877a260ce07551ca5203329490880479974a6461b09c55d1a7c5e79
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker run -it ubuntu:ofarr_update echo Hello 51205 Class Peeps!
Hello 51205 Class Peeps!
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker rm .\clab1.txt
Error: No such container: .\clab1.txt
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> ls


    Directory: C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1


Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
-a----        10/17/2021  11:38 AM              0 clab1.txt
-a----        10/17/2021   9:43 AM             15 full_output.txt
-a----        10/17/2021  11:39 AM              0 lab1.txt
-a----        10/17/2021  11:56 AM           2650 responses.txt
-a----        10/17/2021  12:06 PM           1887 runscript.windows.sh
-a----        10/17/2021  12:09 PM      220398080 ubuntu_ofarr_update.tar


PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker rm .\ubuntu_ofarr_update.tar
Error: No such container: .\ubuntu_ofarr_update.tar
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker images
REPOSITORY    TAG            IMAGE ID       CREATED              SIZE
ubuntu        ofarr_update   85fcc2169877   About a minute ago   211MB
hello-world   latest         feb5d9fea6a5   3 weeks ago          13.3kB
busybox       latest         16ea53ea7c65   4 weeks ago          1.24MB
ubuntu        14.04          13b66b487594   6 months ago         197MB
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker remove ofarr_ubuntu_update
docker: 'remove' is not a docker command.
See 'docker --help'
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker rm ofarr_ubuntu_update
Error: No such container: ofarr_ubuntu_update
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker images
REPOSITORY    TAG            IMAGE ID       CREATED         SIZE
ubuntu        ofarr_update   85fcc2169877   2 minutes ago   211MB
hello-world   latest         feb5d9fea6a5   3 weeks ago     13.3kB
busybox       latest         16ea53ea7c65   4 weeks ago     1.24MB
ubuntu        14.04          13b66b487594   6 months ago    197MB
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker rm @(docker ps -aq) \
67d8c9dc23a7
0560f7cc12ce
4265fd3de041
61df9f965f82
Error response from daemon: You cannot remove a running container a574cd4e3abc261eba63cb73a47742a1cdf91aacbead91ecd84af2c6cbafc949. Stop the container before attempting removal or force remove
Error: No such container: \
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker ps
CONTAINER ID   IMAGE          COMMAND       CREATED          STATUS         PORTS     NAMES
a574cd4e3abc   ubuntu:14.04   "/bin/bash"   31 minutes ago   Up 3 minutes             ofarr_ubuntu
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker stop a574cd4e3abc
a574cd4e3abc
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker rm @(docker ps -aq) \
a574cd4e3abc
Error: No such container: \
PS C:\Users\ofarr\Documents\Grad Classes\Year3\Software\lab1> docker rm @(docker ps -aq) \
